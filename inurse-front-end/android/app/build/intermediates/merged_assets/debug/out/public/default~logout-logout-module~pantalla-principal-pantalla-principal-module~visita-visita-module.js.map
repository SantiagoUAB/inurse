{"version":3,"sources":["./src/app/class/class.globalConstants.ts","./src/app/pantalla-principal/pantalla-principal.page.scss","./src/app/service/plantas.service.ts","./src/app/service/pacientes.service.ts","./src/app/class/class.floor.ts","./src/app/pantalla-principal/pantalla-principal.page.html","./src/app/pantalla-principal/pantalla-principal.page.ts"],"names":[],"mappings":"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","file":"default~logout-logout-module~pantalla-principal-pantalla-principal-module~visita-visita-module.js","sourcesContent":["export class ClassGlobalConstants{\r\n  public static API_BASE = 'http://158.109.74.51:55001/';\r\n  // public static API_BASE = 'http://127.0.0.1:8000/';\r\n  public static API_LOGIN = ClassGlobalConstants.API_BASE + 'auth/login/';\r\n\r\n  public static API_PATIENT = ClassGlobalConstants.API_BASE + 'patient/';\r\n  public static API_FLOOR = ClassGlobalConstants.API_BASE + 'floor/';\r\n  public static API_VISITA = ClassGlobalConstants.API_BASE + 'appointment/';\r\n\r\n}\r\n","export default \"button {\\n  text-decoration: none;\\n  padding: 3px;\\n  font-weight: 400;\\n  font-size: 15px;\\n  color: #141313;\\n  background-color: #78c3e9;\\n  border-radius: 2px;\\n  margin-bottom: 5px;\\n  margin-left: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXHBhbnRhbGxhLXByaW5jaXBhbC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxxQkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFESiIsImZpbGUiOiJwYW50YWxsYS1wcmluY2lwYWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5idXR0b24ge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgcGFkZGluZzogM3B4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIGNvbG9yOiAjMTQxMzEzO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzc4YzNlOTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcblxyXG5cclxuXHJcbiJdfQ== */\";","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AuthenticationService} from './authentication.service';\r\nimport {ClassGlobalConstants} from '../class/class.globalConstants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlantasService {\r\n\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  private urlApi = 'http://158.109.74.51:55001/';\r\n\r\n  getPlantas() {\r\n    return this.httpClient.get(ClassGlobalConstants.API_FLOOR);\r\n  }\r\n\r\n  getPaciente() {\r\n    return this.httpClient.get('http://158.109.74.51:55001/patient/');\r\n\r\n  }\r\n\r\n  getRooms(){\r\n    return this.httpClient.get(this.urlApi + 'room/');\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ClassGlobalConstants} from '../class/class.globalConstants';\r\n\r\nconst _URL_PACIENTES  = 'http://158.109.74.51:55001/patient';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PacientesService {\r\n\r\n  idVisita: any;\r\n  idPatient: any;\r\n  urlVisita: any;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    this.idPatient = 1;\r\n    this.urlVisita = 'http://158.109.74.51:55001/appointment';\r\n  }\r\n\r\n  getPacientes(){\r\n    return this.httpClient.get(ClassGlobalConstants.API_PATIENT);\r\n  }\r\n\r\n  getPaciente(idPaciente: number){\r\n\r\n    console.log('id paciente en servicio ' , idPaciente);\r\n    // http://158.109.74.51:55001/patient/?format=json&dni=0000000G\r\n    return this.httpClient.get(ClassGlobalConstants.API_PATIENT + idPaciente + '/');\r\n  }\r\n\r\n  private getName(){\r\n\r\n  }\r\n\r\n  setIdPacient(id: any){\r\n    // TODO determinar si es un id valido o controlar id correcto\r\n    this.idPatient = id;\r\n  }\r\n  getIdPacient(){\r\n    // TODO error if null\r\n    return  this.idPatient;\r\n  }\r\n  setIdVisita(id: any){\r\n    // TODO determinar si es un id valido o controlar id correcto\r\n    this.idVisita = id;\r\n  }\r\n  getIdVisita(){\r\n    // TODO error if null\r\n    console.log('get id visita ' , this.idVisita);\r\n    return  this.idVisita;\r\n  }\r\n  getVisita(idVisita: number){\r\n\r\n    console.log('id visita ' , idVisita);\r\n    // http://158.109.74.51:55001/patient/?format=json&dni=0000000G\r\n    return this.httpClient.get(ClassGlobalConstants.API_VISITA  + idVisita + '/');\r\n  }\r\n}\r\n","export class Floor{\r\nid: number;\r\nnumFloor: number;\r\nresults: Array<any>;\r\n\r\nconstructor(data:any){\r\n    this.results=data['results'];\r\n    \r\n\r\n}\r\n}","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center\\\">Pantalla Principal</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"11\\\">\\r\\n        <ion-segment scrollable   >\\r\\n          <ion-segment-button *ngFor=\\\"let planta of arrayPlanta\\\" (click)=\\\"cambioPlanta(planta['floor_num'])\\\">\\r\\n\\r\\n            PLANTA {{planta['floor_num']}}\\r\\n\\r\\n          </ion-segment-button>\\r\\n\\r\\n        </ion-segment>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div *ngIf=\\\"comprobacionPacienteFijado == '0'\\\">\\r\\n    <ion-text>&nbsp; &nbsp; <b>No hay ningún paciente fijado:</b></ion-text>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"comprobacionPacienteFijado == '1'\\\">\\r\\n    <ion-text>&nbsp; &nbsp; <b>Paciente fijado: {{nombrePacienteFijado}} {{apellidoPacienteFijado}}</b></ion-text>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"comprobacionPacienteFijado == '1'\\\">\\r\\n    <ion-button (click) = \\\"desfijarPaciente()\\\" expand=\\\"block\\\" color=\\\"danger\\\">Desfijar paciente</ion-button>\\r\\n  </div>\\r\\n\\r\\n  <ion-list>\\r\\n    <ion-item class=\\\"paciente\\\" ion-item *ngFor=\\\"let item of listaPaciente\\\" (click)=verFichaPaciente(item[3]) >\\r\\n      <ion-label>{{item[0]}} : {{item[1]}} {{item[2]}}</ion-label>\\r\\n      <div *ngIf=\\\"comprobacionPacienteFijado == '0'\\\">\\r\\n        <ion-button (click) = \\\"fijarPaciente(item[1],item[2])\\\" expand=\\\"block\\\">Fijar paciente</ion-button>\\r\\n      </div>\\r\\n    </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </ion-list>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\";","import {Component, Input, OnInit} from '@angular/core';\r\nimport { PlantasService } from '../service/plantas.service';\r\nimport {Floor} from '../class/class.floor';\r\nimport {PacientesService} from '../service/pacientes.service';\r\nimport {Router} from '@angular/router';\r\nimport {AuthenticationService} from '../service/authentication.service';\r\nimport {TokenStorageService} from '../service/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-pantalla-principal',\r\n  templateUrl: './pantalla-principal.page.html',\r\n  styleUrls: ['./pantalla-principal.page.scss'],\r\n})\r\nexport class PantallaPrincipalPage implements OnInit {\r\n\r\n  private arrayPlanta: Array<any>;\r\n  private resultado: Array<any>;\r\n  private planta: Floor;\r\n  private roomPacientes: Array<any>;\r\n  private aux2: string[];\r\n  private habitacion: string;\r\n  private lista: any[];\r\n  private listaPaciente: any[];\r\n  comprobacionPacienteFijado: string;\r\n  private nombrePacienteFijado: string;\r\n  private apellidoPacienteFijado: string;\r\n\r\n  @Input()\r\n  idPatient: any;\r\n  private listRooms: any;\r\n\r\n  constructor(private plantasService: PlantasService,\r\n              private patientSevice: PacientesService,\r\n              private router: Router,\r\n              ) {\r\n    this.idPatient = 1; // paciente por defecto\r\n    this.loadPlantas();\r\n    this.loadPacientes();\r\n\r\n\r\n    console.log(this.resultado);\r\n   }\r\n\r\n  private loadPacientes() {\r\n    this.plantasService.getPaciente().subscribe(data => {\r\n      console.log('Pacientes');\r\n      console.log(data);\r\n      this.roomPacientes = data['results'];\r\n\r\n      console.log(this.roomPacientes);\r\n      console.log('poner planta 1 por defecto');\r\n      this.cambioPlanta(1);\r\n    });\r\n  }\r\n\r\n  private loadPlantas() {\r\n    this.plantasService.getPlantas().subscribe(data => {\r\n      console.log('Plantas');\r\n      console.log(data);\r\n      this.planta = new Floor(data);\r\n      this.arrayPlanta = this.planta.results;\r\n\r\n    });\r\n  }\r\n\r\n  cambioPlanta(planta){\r\n    console.log('Poner la planta ', planta);\r\n    this.lista = [];\r\n    for (let file of this.roomPacientes) {\r\n      if (planta == (file['room']['floor']['floor_num'])){\r\n      this.aux2 = [file['room']['room_num'],file['first_name'],file['last_name'], file.id];\r\n      this.lista.push(this.aux2);\r\n      }\r\n\r\n   }\r\n    this.listaPaciente = this.lista.sort();\r\n    console.log(this.listaPaciente);\r\n\r\n}\r\n  ngOnInit() {\r\n    this.nombrePacienteFijado = localStorage.getItem('nombrePacienteFijado');\r\n    this.apellidoPacienteFijado = localStorage.getItem('apellidoPacienteFijado');\r\n    this.comprobacionPacienteFijado = localStorage.getItem('comprobacionPacienteFijado');\r\n    console.log('Valor inicial paciente fijado: ' + this.comprobacionPacienteFijado)\r\n    if (this.comprobacionPacienteFijado === null || undefined) {\r\n      this.comprobacionPacienteFijado = '0';\r\n    }\r\n  }\r\n\r\n  public verFichaPaciente( id: any){\r\n    console.log('voy a ver la ficha paciente con ID', id);\r\n    this.patientSevice.setIdPacient(id);\r\n    this.router.navigate(['/ficha-paciente/']);\r\n }\r\n\r\n  fijarPaciente(nombre: string, apellido: string) {\r\n    console.log('Nombre paciente fijado: ' + nombre);\r\n    console.log('Apellido paciente fijado: ' + apellido);\r\n    localStorage.setItem('comprobacionPacienteFijado', '1');\r\n    this.comprobacionPacienteFijado = localStorage.getItem('comprobacionPacienteFijado');\r\n    console.log('Paciente fijado: ' + this.comprobacionPacienteFijado);\r\n    localStorage.setItem('nombrePacienteFijado', nombre);\r\n    localStorage.setItem('apellidoPacienteFijado', apellido);\r\n    this.nombrePacienteFijado = nombre;\r\n    this.apellidoPacienteFijado = apellido;\r\n  }\r\n  desfijarPaciente() {\r\n    localStorage.setItem('comprobacionPacienteFijado', '0');\r\n    this.comprobacionPacienteFijado = localStorage.getItem('comprobacionPacienteFijado');\r\n    localStorage.clear();\r\n    this.nombrePacienteFijado = undefined;\r\n    this.apellidoPacienteFijado = undefined;\r\n  }\r\n\r\n  getRoomsAuth() {\r\n\r\n    console.log('get rooms auth');\r\n    this.plantasService.getRooms().subscribe( data => {\r\n      this.listRooms = data;\r\n    });\r\n }\r\n}\r\n"],"sourceRoot":"webpack:///"}