{"version":3,"sources":["./src/app/pantalla-principal/pantalla-principal.page.scss","./src/app/service/plantas.service.ts","./src/app/class/class.floor.ts","./src/app/pantalla-principal/pantalla-principal.page.html","./src/app/pantalla-principal/pantalla-principal.page.ts"],"names":[],"mappings":"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","file":"default~logout-logout-module~pantalla-principal-pantalla-principal-module~visita-visita-module.js","sourcesContent":["export default \"button {\\n  text-decoration: none;\\n  padding: 3px;\\n  font-weight: 400;\\n  font-size: 15px;\\n  color: #141313;\\n  background-color: #78c3e9;\\n  border-radius: 2px;\\n  margin-bottom: 5px;\\n  margin-left: 10px;\\n}\\n\\n.headerPrincipal {\\n  font-size: 20px;\\n}\\n\\n.background-color-grey {\\n  background-color: #EEEEEE;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXHBhbnRhbGxhLXByaW5jaXBhbC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxxQkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFESjs7QUFJQTtFQUNJLGVBQUE7QUFESjs7QUFJQTtFQUNFLHlCQUFBO0FBREYiLCJmaWxlIjoicGFudGFsbGEtcHJpbmNpcGFsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuYnV0dG9uIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIHBhZGRpbmc6IDNweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBjb2xvcjogIzE0MTMxMztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM3OGMzZTk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG5cclxuLmhlYWRlclByaW5jaXBhbHtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG5cclxuLmJhY2tncm91bmQtY29sb3ItZ3JleXtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFRUVFO1xyXG4gIC8vYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG59XHJcblxyXG4iXX0= */\";","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AuthenticationService} from './authentication.service';\r\nimport {ClassGlobalConstants} from '../class/class.globalConstants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlantasService {\r\n\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  private urlApi = 'http://158.109.74.51:55001/';\r\n\r\n  getPlantas() {\r\n    return this.httpClient.get(ClassGlobalConstants.API_FLOOR);\r\n  }\r\n\r\n  getPaciente() {\r\n    return this.httpClient.get('http://158.109.74.51:55001/patient/');\r\n\r\n  }\r\n\r\n  getRooms(){\r\n    return this.httpClient.get(this.urlApi + 'room/');\r\n  }\r\n\r\n\r\n}\r\n","export class Floor{\r\nid: number;\r\nnumFloor: number;\r\nresults: Array<any>;\r\n\r\nconstructor(data:any){\r\n    this.results=data['results'];\r\n    \r\n\r\n}\r\n}","export default \"<ion-header>\\r\\n<!--  <ion-toolbar>\\r\\n    <ion-grid class=\\\"ion-no-padding ion-no-margin\\\">\\r\\n      <ion-row >\\r\\n        <ion-col >\\r\\n          <ion-menu-button></ion-menu-button>\\r\\n        </ion-col>\\r\\n        <ion-col   >\\r\\n          <ion-list-header class=\\\"headerPrincipal\\\">Pantalla Principal</ion-list-header>\\r\\n        </ion-col>\\r\\n        <ion-col >\\r\\n          <ion-searchbar style=\\\"margin-top: 10px;\\\" placeholder=\\\"\\\" (ionChange)=\\\"pantallaBuscador($event.detail.value)\\\"></ion-searchbar>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-toolbar>-->\\r\\n\\r\\n\\r\\n  <ion-toolbar >\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button (click)=\\\"this.openClose()\\\"><ion-icon name=\\\"search-outline\\\"></ion-icon></ion-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title  >Lista Pacientes</ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-searchbar  *ngIf=\\\"this.isSearchOn\\\"\\r\\n                  (ionChange)=\\\"pantallaBuscador($event.detail.value)\\\"\\r\\n                  showCancelButton=\\\"always\\\"\\r\\n                  (ionCancel)=\\\"this.showTitle()\\\"\\r\\n\\r\\n\\r\\n                  placeholder=\\\"Nombre paciente\\\"\\r\\n                  animated=\\\"true\\\"\\r\\n\\r\\n                  cancelButtonIcon=\\\"chevron-back-outline\\\"\\r\\n                  >\\r\\n\\r\\n  </ion-searchbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n<!--  <ion-button (click)=\\\"this.refreshLogin()\\\"> Refresh</ion-button>-->\\r\\n\\r\\n  <div *ngIf=\\\"!buscador\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"11\\\">\\r\\n        <ion-segment scrollable   >\\r\\n          <ion-segment-button *ngFor=\\\"let planta of arrayPlanta\\\" (click)=\\\"cambioPlanta(planta['floor_num'])\\\">\\r\\n\\r\\n            PLANTA {{planta['floor_num']}}\\r\\n\\r\\n          </ion-segment-button>\\r\\n\\r\\n        </ion-segment>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--  <div *ngIf=\\\"comprobacionPacienteFijado == '0'\\\">\\r\\n    <ion-text>&nbsp; &nbsp; <b>No hay ningún paciente fijado</b></ion-text>\\r\\n  </div>-->\\r\\n  <div *ngIf=\\\"comprobacionPacienteFijado == '1'\\\">\\r\\n\\r\\n    <ion-row class=\\\"ion-align-items-center\\\">\\r\\n      <ion-text class=\\\"ion-padding-end\\\">&nbsp; &nbsp; <b>Paciente fijado: {{nombrePacienteFijado}} {{apellidoPacienteFijado}}</b></ion-text>\\r\\n      <ion-button (click) = \\\"desfijarPaciente()\\\" expand=\\\"block\\\" color=\\\"danger\\\" size=\\\"small\\\"   fill=\\\"outline\\\"><ion-icon name=\\\"close-circle-sharp\\\"></ion-icon></ion-button>\\r\\n    </ion-row>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"comprobacionPacienteFijado == '1'\\\">\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n<!--\\r\\n    <ion-item-sliding>\\r\\n      <ion-item href=\\\"#\\\" >\\r\\n        <ion-label>\\r\\n          <h2>Nombre paciente</h2>\\r\\n          <p>habitacion paciente</p>\\r\\n        </ion-label>\\r\\n        <ion-note slot=\\\"end\\\">\\r\\n          <button>fijar</button>\\r\\n        </ion-note>\\r\\n      </ion-item>\\r\\n\\r\\n    </ion-item-sliding>\\r\\n-->\\r\\n\\r\\n\\r\\n    <ion-item-sliding class=\\\"paciente \\\"  ion-item *ngFor=\\\"let item of this.listPlantaActual\\\">\\r\\n     <!-- <ion-item-sliding [ngClass]=\\\"{'background-color-grey': i %2 == 0}\\\" >\\r\\n        <ion-label class=\\\"ion-text-wrap \\\"   (click)=\\\"this.verFichaPaciente(item[3])\\\">{{i}} -&#45;&#45; {{item[0]}} : {{item[1]}} {{item[2]}}</ion-label >\\r\\n        <div *ngIf=\\\"comprobacionPacienteFijado == '0'\\\">\\r\\n          <ion-button (click) = \\\"fijarPaciente(item[1],item[2])\\\" expand=\\\"block\\\" size=\\\"small\\\" color=\\\"primary\\\"  fill=\\\"outline\\\"><ion-icon src=\\\"assets/icon/pin.svg\\\"></ion-icon></ion-button>\\r\\n        </div>\\r\\n      </ion-item-sliding>-->\\r\\n      <ion-item    >\\r\\n        <ion-label (click)=\\\"this.verFichaPaciente(item[3])\\\" >\\r\\n          <h2>{{this.item[1]}} {{this.item[2]}}</h2>\\r\\n          <p>Habitación: {{this.item[0]}}</p>\\r\\n        </ion-label>\\r\\n        <ion-note slot=\\\"end\\\" *ngIf=\\\"comprobacionPacienteFijado == '0'\\\">\\r\\n          <ion-button (click) = \\\"fijarPaciente(item[1],item[2], item[3])\\\" expand=\\\"block\\\" size=\\\"small\\\" color=\\\"primary\\\"  fill=\\\"outline\\\"><ion-icon src=\\\"assets/icon/pin.svg\\\"></ion-icon></ion-button>\\r\\n        </ion-note>\\r\\n      </ion-item>\\r\\n    </ion-item-sliding>\\r\\n\\r\\n\\r\\n</div>\\r\\n<!--  <img src=\\\"./assets/icon/pin.png\\\">-->\\r\\n\\r\\n<div *ngIf=\\\"buscador\\\">\\r\\n\\r\\n\\r\\n  <app-buscador [pacienteList]=\\\"pacienteList\\\"></app-buscador>\\r\\n\\r\\n</div>\\r\\n\\r\\n</ion-content>\\r\\n\";","import {Component, Input, OnInit} from '@angular/core';\r\nimport { PlantasService } from '../service/plantas.service';\r\nimport {Floor} from '../class/class.floor';\r\nimport {PacientesService} from '../service/pacientes.service';\r\nimport {Router} from '@angular/router';\r\nimport {AuthenticationService} from '../service/authentication.service';\r\nimport {TokenStorageService} from '../service/token-storage.service';\r\nimport { Patient } from '../class/class.patient';\r\nimport {ClassGlobalConstants} from \"../class/class.globalConstants\";\r\n\r\n@Component({\r\n  selector: 'app-pantalla-principal',\r\n  templateUrl: './pantalla-principal.page.html',\r\n  styleUrls: ['./pantalla-principal.page.scss'],\r\n})\r\nexport class PantallaPrincipalPage implements OnInit {\r\n\r\n  private arrayPlanta: Array<any>;\r\n  private resultado: Array<any>;\r\n  private planta: Floor;\r\n  private roomPacientes: Array<any>;\r\n  private aux2: string[];\r\n  private habitacion: string;\r\n  private lista: any[];\r\n  private listPlantaActual: any[];\r\n  private comprobacionPacienteFijado: string;\r\n  private idPacienteFijado: string;\r\n  private nombrePacienteFijado: string;\r\n  private apellidoPacienteFijado: string;\r\n  private buscador:boolean;\r\n  private pacienteBuscador: Patient;\r\n  private pacienteList:any = [];\r\n  isSearchOn: boolean;\r\n\r\n\r\n  @Input()\r\n  idPatient: any;\r\n  private listRooms: any;\r\n\r\n  constructor(private plantasService: PlantasService,\r\n              private patientSevice: PacientesService,\r\n              private router: Router,\r\n              private authService: AuthenticationService\r\n              ) {\r\n    this.idPatient = 1; // paciente por defecto\r\n    this.loadPlantas();\r\n    this.loadPacientes();\r\n    this.isSearchOn = false;\r\n\r\n\r\n    console.log(this.resultado);\r\n   }\r\n\r\n  private loadPacientes() {\r\n    this.plantasService.getPaciente().subscribe(data => {\r\n      console.log('Pacientes');\r\n      console.log(data);\r\n      this.roomPacientes = data['results'];\r\n\r\n      console.log(this.roomPacientes);\r\n      console.log('poner planta 1 por defecto');\r\n      this.cambioPlanta(1);\r\n    });\r\n  }\r\n\r\n  private loadPlantas() {\r\n    this.plantasService.getPlantas().subscribe(data => {\r\n      console.log('Plantas');\r\n      console.log(data);\r\n      this.planta = new Floor(data);\r\n      this.arrayPlanta = this.planta.results;\r\n\r\n    });\r\n  }\r\n\r\n  cambioPlanta(planta){\r\n    console.log('Poner la planta ', planta);\r\n    this.lista = [];\r\n    for (let file of this.roomPacientes) {\r\n      if (planta == (file['room']['floor']['floor_num'])){\r\n      this.aux2 = [file['room']['room_num'],file['first_name'],file['last_name'], file.id];\r\n      this.lista.push(this.aux2);\r\n      }\r\n\r\n   }\r\n    this.listPlantaActual = this.lista.sort();\r\n    console.log(this.listPlantaActual);\r\n\r\n}\r\n  ngOnInit() {\r\n    this.buscador = false;\r\n    this.nombrePacienteFijado = localStorage.getItem(ClassGlobalConstants.KEY_NOMBRE_PACIENTE_FIJADO);\r\n    this.apellidoPacienteFijado = localStorage.getItem('apellidoPacienteFijado');\r\n    this.comprobacionPacienteFijado = localStorage.getItem('comprobacionPacienteFijado');\r\n    console.log('Valor inicial paciente fijado: ' + this.comprobacionPacienteFijado);\r\n    if (this.comprobacionPacienteFijado === null || undefined) {\r\n      this.comprobacionPacienteFijado = '0';\r\n    }\r\n  }\r\n\r\n  public verFichaPaciente( id: any){\r\n    console.log('voy a ver la ficha paciente con ID', id);\r\n    this.patientSevice.setIdPacient(id);\r\n    this.authService.setInPantallaPrincipal();\r\n    this.router.navigate(['/ficha-paciente/']);\r\n }\r\n\r\n  fijarPaciente(nombre: string, apellido: string, idPaciente: string) {\r\n    console.log('Nombre paciente fijado: ' + nombre);\r\n    console.log('Apellido paciente fijado: ' + apellido);\r\n    localStorage.setItem('comprobacionPacienteFijado', '1');\r\n    this.comprobacionPacienteFijado = localStorage.getItem('comprobacionPacienteFijado');\r\n    console.log('Paciente fijado: ' + this.comprobacionPacienteFijado);\r\n    localStorage.setItem(ClassGlobalConstants.KEY_NOMBRE_PACIENTE_FIJADO, nombre);\r\n    localStorage.setItem('apellidoPacienteFijado', apellido);\r\n\r\n    this.nombrePacienteFijado = nombre;\r\n    this.apellidoPacienteFijado = apellido;\r\n\r\n    console.log('id pacinete fijado ', idPaciente);\r\n    localStorage.setItem(ClassGlobalConstants.KEY_PACIENTE_ID, idPaciente);\r\n  }\r\n  desfijarPaciente() {\r\n    localStorage.setItem('comprobacionPacienteFijado', '0');\r\n    this.comprobacionPacienteFijado = localStorage.getItem('comprobacionPacienteFijado');\r\n    // localStorage.clear();\r\n    localStorage.removeItem('comprobacionPacienteFijado');\r\n    localStorage.removeItem(ClassGlobalConstants.KEY_NOMBRE_PACIENTE_FIJADO);\r\n    localStorage.removeItem('apellidoPacienteFijado');\r\n    localStorage.removeItem(ClassGlobalConstants.KEY_PACIENTE_ID);\r\n\r\n\r\n    this.nombrePacienteFijado = undefined;\r\n    this.apellidoPacienteFijado = undefined;\r\n  }\r\n\r\n  getRoomsAuth() {\r\n\r\n    console.log('get rooms auth');\r\n    this.plantasService.getRooms().subscribe( data => {\r\n      this.listRooms = data;\r\n    });\r\n }\r\n\r\n\r\n pantallaBuscador(value: any){\r\n\r\n  this.pacienteList = []\r\n   if (value != ''){\r\n\r\n  var primeraPosicio:Number = parseInt(value.substring(0,1));\r\n  if(Number.isFinite(primeraPosicio)){\r\n\r\n    this.patientSevice.getPacienteDni(value).subscribe((response: any) => {\r\n      response.results.forEach(element => {\r\n        this.pacienteList.push(element);\r\n      });\r\n      console.log(\"RESULTS \", response.results);\r\n      console.log(\"PACIENTE \", this.pacienteList);\r\n      if(response['count'] !== 0){\r\n        this.buscador = true;\r\n      } else {\r\n        this.buscador = false;\r\n     }\r\n    })\r\n\r\n  } else if(!Number.isFinite(primeraPosicio)){\r\n\r\n\r\n    this.patientSevice.getPacienteName(value).subscribe((response: any = []) => {\r\n\r\n      if(response.results[1] == null) {\r\n        console.log(\"nomes una persona\")\r\n        response.results.forEach(element => {\r\n          this.pacienteList.push(element);\r\n        });\r\n\r\n      console.log(\"PACIENTE \", this.pacienteList);\r\n\r\n\r\n      } else{\r\n        console.log(\"varies persona\")\r\n        response.results.forEach(element => {\r\n          this.pacienteList.push(element);\r\n        });\r\n     // this.pacienteList.push(response.results);\r\n      console.log(\"RESULTS \", response.results);\r\n      console.log(\"PACIENTE \", this.pacienteList);\r\n    }\r\n      if(response['count'] !== 0){\r\n        this.buscador = true;\r\n      } else {\r\n        this.buscador = false;\r\n     }\r\n    })\r\n\r\n  }\r\n\r\n } else {\r\n   this.buscador = false;\r\n }\r\n\r\n}\r\n\r\n  refreshLogin() {\r\n    this.authService.refreshToken().subscribe( data => {\r\n      console.log('token refresh' , data );\r\n    });\r\n  }\r\n\r\n\r\n  openClose() {\r\n    this.isSearchOn = !this.isSearchOn;\r\n  }\r\n\r\n  showTitle() {\r\n    this.isSearchOn = !this.isSearchOn;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}