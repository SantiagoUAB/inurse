{"version":3,"sources":["./src/app/class/class.visit.ts","./src/app/buscador/buscador.page.ts","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","./src/app/buscador/buscador.page.html","./src/app/class/class.patient.ts","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./src/app/buscador/buscador.page.scss","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js"],"names":[],"mappings":"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AAA;AAAA;AAA8D;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAe,6GAA8C,uHAAuH,E;;;;;;;;;;;;ACApL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI","file":"common.js","sourcesContent":["export class Visit{\r\n  createdTimestamp: string;\r\n  data: Date;\r\n  description: string;\r\n  id: number;\r\n  nurse: string;\r\n  patient: number;\r\n  treatment: string;\r\n\r\n\r\n\r\n  constructor(data: any) {\r\n\r\n    // console.log('soy el constructor Visita');\r\n    // console.log(data);\r\n\r\n\r\n    // this.createdTimestamp =  data['created_at'];\r\n    this.data =  new Date(data.date);\r\n    this.id =  data.id;\r\n    this.patient = data.patient;\r\n    this.treatment = data.treatment;\r\n    // this.nurse =  data['nurse'];\r\n    // this.description =  data['description'];\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IonInfiniteScroll } from '@ionic/angular';\r\nimport { Patient } from '../class/class.patient';\r\nimport { PacientesService } from '../service/pacientes.service';\r\n\r\n@Component({\r\n  selector: 'app-buscador',\r\n  templateUrl: './buscador.page.html',\r\n  styleUrls: ['./buscador.page.scss'],\r\n})\r\nexport class BuscadorPage implements OnInit {\r\n\r\n  @Input() pacienteList: any;\r\n  constructor(  private patientSevice: PacientesService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n\r\n  \r\n\r\n  verFichaPaciente( id: any){\r\n    console.log('id paciente wey', id);\r\n    this.patientSevice.setIdPacient(id);\r\n    this.router.navigate(['/ficha-paciente/']);\r\n }\r\n\r\n}\r\n\r\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-f49d994d.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","export default \"\\r\\n\\r\\n\\r\\n\\r\\n<ion-list>\\r\\n  <ion-item *ngFor=\\\"let paciente of pacienteList\\\" (click)=verFichaPaciente(paciente.id)> \\r\\n    <ion-label>&nbsp; &nbsp; <b>Nombre:</b> {{paciente.first_name}} </ion-label>\\r\\n    <ion-label>&nbsp; &nbsp; <b>Apellido: </b>{{paciente.last_name}} </ion-label>\\r\\n    <ion-label>&nbsp; &nbsp; <b>Planta:</b> {{paciente.room.floor.floor_num}}</ion-label>\\r\\n  </ion-item>\\r\\n\\r\\n</ion-list>\\r\\n\";","import {IPatient} from '../models/interface.patient.model';\r\n\r\nexport  class Patient implements IPatient{\r\n\r\n  public static STATUS_NONE = '---';\r\n  public static STATUS_TREATMENT = 'treatment';\r\n  public static STATUS_WAITING = 'waiting for results';\r\n  public static STATUS_IN_SURGERY = 'in surgery';\r\n\r\n  heardRate: string;\r\n  height: number;\r\n  history: string[];\r\n  firstName: string;\r\n  temperature: string;\r\n  tension: string;\r\n  weight: number;\r\n  currentStatus: string;\r\n  age: number;\r\n  allergies: string;\r\n  assignedNurse: number;\r\n  dni: string;\r\n  lastName: string;\r\n  roomId: number;\r\n  sex: string;\r\n  id: number;\r\n  isMale: boolean;\r\n\r\n  mapCurrentStatus: Map<string, string>;\r\n\r\n\r\n  setTension(value: string){\r\n    this.tension = value;\r\n  }\r\n\r\n  setTemperature(value: string){\r\n    this.temperature = value;\r\n  }\r\n\r\n  setHeardRate(value: string){\r\n    this.heardRate = value;\r\n  }\r\n\r\n  getTension(){\r\n    return this.tension;\r\n  }\r\n\r\n  getTemperature(){\r\n    return this.temperature;\r\n  }\r\n\r\n  getHeardRate(){\r\n    return this.heardRate;\r\n  }\r\n\r\n  getFirstName(): any{\r\n    return this.firstName;\r\n  }\r\n  constructor(data: any) {\r\n    console.log('hola soy el constructor paciente');\r\n    // console.log(data);\r\n\r\n    this.firstName = data.first_name;\r\n    this.age = data.age;\r\n    this.allergies = data.allergies;\r\n    this.currentStatus = data.current_status;\r\n    this.heardRate = data.heart_rate;\r\n    this.dni = data.dni;\r\n    this.height = data.height;\r\n    this.id = data.id;\r\n    this.lastName = data.last_name;\r\n    this.sex = data.sex;\r\n    this.temperature = data.temperature;\r\n    this.tension = data.tension;\r\n    this.weight = data.weight;\r\n    this.roomId = data.room.id;\r\n\r\n    this.mapCurrentStatus = new Map<string, string>();\r\n\r\n    this.mapCurrentStatus.set(Patient.STATUS_NONE, '0');\r\n    this.mapCurrentStatus.set(Patient.STATUS_TREATMENT, '1');\r\n    this.mapCurrentStatus.set(Patient.STATUS_IN_SURGERY, '2');\r\n    this.mapCurrentStatus.set(Patient.STATUS_WAITING, '3');\r\n\r\n\r\n    console.log(this.mapCurrentStatus);\r\n\r\n    if (this.sex == 'Man'){\r\n      this.isMale = true;\r\n    }else{\r\n      this.isMale = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  private initMap() {\r\n    this.mapCurrentStatus = new Map<string, string>();\r\n\r\n    this.mapCurrentStatus.set(Patient.STATUS_NONE, '0');\r\n    this.mapCurrentStatus.set(Patient.STATUS_TREATMENT, '1');\r\n    this.mapCurrentStatus.set(Patient.STATUS_IN_SURGERY, '2');\r\n    this.mapCurrentStatus.set(Patient.STATUS_WAITING, '3');\r\n  }\r\n\r\n  getLastName() {\r\n    return this.lastName;\r\n  }\r\n\r\n  getAge() {\r\n    return this.age;\r\n  }\r\n\r\n  getDni() {\r\n    return this.dni;\r\n  }\r\n\r\n  getRoom() {\r\n    // TODO mirar donde se carga el valor\r\n    return this.roomId;\r\n  }\r\n\r\n  getSex() {\r\n    return this.sex;\r\n  }\r\n\r\n  getHeight() {\r\n    return this.height;\r\n  }\r\n\r\n  getAllergies() {\r\n    return this.allergies;\r\n  }\r\n\r\n  getCurrentStatusText() {\r\n    return this.currentStatus;\r\n  }\r\n  getCurrentStatusNum(){\r\n    return this.mapCurrentStatus.get(this.currentStatus);\r\n\r\n  }\r\n\r\n  setCurrentStatus(value: any) {\r\n\r\n    switch (value){\r\n      case '0':\r\n        this.currentStatus = Patient.STATUS_NONE;\r\n        break;\r\n      case '1':\r\n        this.currentStatus = Patient.STATUS_TREATMENT;\r\n        break;\r\n      case '2':\r\n        this.currentStatus = Patient.STATUS_IN_SURGERY;\r\n        break;\r\n      case '3':\r\n        this.currentStatus = Patient.STATUS_WAITING;\r\n        break;\r\n      default:\r\n        this.currentStatus = Patient.STATUS_NONE;\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJidXNjYWRvci5wYWdlLnNjc3MifQ== */\";","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n"],"sourceRoot":"webpack:///"}